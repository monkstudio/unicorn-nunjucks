{"version":3,"sources":["../scss/_variables.scss","main.css","../scss/_normalize.scss","../scss/_elements.scss","../scss/_typography.scss","../scss/modularscale/_respond.scss","../scss/modularscale/_vars.scss","../scss/_navigation.scss","../scss/_includemedia.scss","../scss/modularscale/_function.scss","../scss/_layout.scss"],"names":[],"mappings":"AAEA;EACI,kBAAU;EACV,kBAAY;CACf;;AACD;EACI,eAAU;EACV,qBAAY;CACf;;AAaD;EACC,oCAAmC;EAChC,gHACuD;CCZ1D;;ACbD;EACC,wBAAuB;EACvB,+BAA8B;EAC9B,2BAA8B;CAC9B;;AAED;EACC,UAAS;CACT;;AAED;;;;;;;;;;;;EAYC,eAAc;CACd;;AAED;;;;EAIC,sBAAqB;EACrB,yBAAwB;CACxB;;AAED;EACC,cAAa;EACb,UAAS;CACT;;ADiBD;;ECbC,cAAa;CACb;;AAED;EACC,8BAA6B;CAC7B;;AAED;;EAEC,WAAU;CACV;;AAED;EACC,0BAAyB;CACzB;;AAED;;EAEC,kBAAiB;CACjB;;AAED;EACC,mBAAkB;CAClB;;AAED;EACC,eAAc;EACd,iBAAgB;CAChB;;AAED;EACC,iBAAgB;EAChB,YAAW;CACX;;AAED;EACC,eAAc;CACd;;AAED;;EAEC,eAAc;EACd,eAAc;EACd,mBAAkB;EAClB,yBAAwB;CACxB;;AAED;EACC,YAAW;CACX;;AAED;EACC,gBAAe;CACf;;AAED;EACC,UAAS;CACT;;AAED;EACC,iBAAgB;CAChB;;AAED;EACC,iBAAgB;CAChB;;AAED;EACC,gCAAuB;UAAvB,wBAAuB;EACvB,UAAS;CACT;;AAED;EACC,eAAc;CACd;;AAED;;;;EAIC,kCAAiC;EACjC,eAAc;CACd;;AAED;;;;;EAKC,eAAc;EACd,cAAa;EACb,UAAS;CACT;;AAED;EACC,kBAAiB;CACjB;;AAED;;EAEC,qBAAoB;CACpB;;AAED;;;;EAIC,2BAA0B;EAC1B,gBAAe;CACf;;AAED;;EAEC,gBAAe;CACf;;AAED;;EAEC,UAAS;EACT,WAAU;CACV;;AAED;EACC,oBAAmB;CACnB;;AAED;;EAEC,+BAAsB;UAAtB,uBAAsB;EACtB,WAAU;CACV;;AAED;;EAEC,aAAY;CACZ;;AAED;;EAEC,yBAAwB;CACxB;;AAED;EACC,0BAAyB;EACzB,cAAa;EACb,+BAA8B;CAC9B;;AAED;EACC,UAAS;EACT,WAAU;CACV;;AAED;EACC,eAAc;CACd;;AAED;EACC,kBA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","file":"main.css","sourcesContent":["\n\n:root {\n    --primary:#ec1c31;\n    --secondary: #FFF;\n}\n.modal-active:root {\n    --primary:#FFF;\n    --secondary: #ec1c31;\n}\n//colours\n//common\n$brand-lightgrey: rgb(228, 228, 228);\n$brand-darkgrey: #999;\n\n//brand\n$brand-primary: var(--primary);\n$brand-secondary: var(--secondary);\n$brand-placeholder-color:$brand-lightgrey;\n\n\n\n@font-face {\n\tfont-family: 'BrandonGrotesqueCond';\n    src:url('/static/fonts/392640_0_0.woff2') format('woff2'), \n        url('/static/fonts/392640_0_0.woff') format('woff'), \n}\n\n\n//fonts\n$brand-font: 'BrandonGrotesqueCond',\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n$brand-heading: 'BrandonGrotesqueCond',\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n",":root {\n  --primary:#ec1c31;\n  --secondary: #FFF;\n}\n\n.modal-active:root {\n  --primary:#FFF;\n  --secondary: #ec1c31;\n}\n\n@font-face {\n  font-family: 'BrandonGrotesqueCond';\n  src: url(\"/static/fonts/392640_0_0.woff2\") format(\"woff2\"), url(\"/static/fonts/392640_0_0.woff\") format(\"woff\");\n}\n\nhtml {\n  font-family: sans-serif;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\n\nbody {\n  margin: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n[hidden],\ntemplate {\n  display: none;\n}\n\na {\n  background-color: transparent;\n}\n\na:active,\na:hover {\n  outline: 0;\n}\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\nb,\nstrong {\n  font-weight: bold;\n}\n\ndfn {\n  font-style: italic;\n}\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nimg {\n  border: 0;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\nfigure {\n  margin: 1em 40px;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\npre {\n  overflow: auto;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\n\nbutton {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\ninput {\n  line-height: normal;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\nlegend {\n  border: 0;\n  padding: 0;\n}\n\ntextarea {\n  overflow: auto;\n}\n\noptgroup {\n  font-weight: bold;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%;\n}\n\n*,\n*:before,\n*:after {\n  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\n  box-sizing: inherit;\n}\n\n.sr-only {\n  border: 0 !important;\n  clip: rect(1px, 1px, 1px, 1px) !important;\n  /* 1 */\n  -webkit-clip-path: inset(50%) !important;\n  clip-path: inset(50%) !important;\n  /* 2 */\n  height: 1px !important;\n  margin: -1px !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  width: 1px !important;\n  white-space: nowrap !important;\n  /* 3 */\n}\n\n/*\n\tUse in conjunction with .sr-only to only display content when it's focused.\n\t@note Useful for skip links \n\t@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\n\t@note Based on a HTML5 Boilerplate technique, included in Bootstrap\n\t@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver\n\t\t@author Sylvain Pigeard\n\t\t@see https://github.com/twbs/bootstrap/issues/20732\n*/\n.sr-only-focusable:focus,\n.sr-only-focusable:active {\n  clip: auto !important;\n  -webkit-clip-path: none !important;\n  clip-path: none !important;\n  height: auto !important;\n  margin: auto !important;\n  overflow: visible !important;\n  width: auto !important;\n  white-space: normal !important;\n}\n\nbody {\n  background-color: var(--primary);\n  color: var(--secondary);\n}\n\nblockquote, q {\n  quotes: \"\" \"\";\n  margin: 20px 0 20px 50px;\n}\n\nblockquote:before, blockquote:after, q:before, q:after {\n  content: \"\";\n}\n\nhr {\n  background-color: lightgrey;\n  border: 0;\n  height: 1px;\n  margin: 30px 0;\n}\n\nimg {\n  height: auto;\n  /* Make sure images are scaled correctly. */\n  max-width: 100%;\n  /* Adhere to container width. */\n}\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n  color: var(--secondary);\n  font-family: \"BrandonGrotesqueCond\", \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n  font-size: 1.5625em;\n  line-height: 1.2;\n}\n\n@media (min-width: 400px) and (max-width: 992px) {\n  body,\n  button,\n  input,\n  select,\n  textarea {\n    font-size: calc( 1.5625em + 0.1275 * ( ( 100vw - 400px) / 592 ));\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1400px) {\n  body,\n  button,\n  input,\n  select,\n  textarea {\n    font-size: calc( 1.69em + 0.27 * ( ( 100vw - 992px) / 408 ));\n  }\n}\n\n@media (min-width: 1400px) {\n  body,\n  button,\n  input,\n  select,\n  textarea {\n    font-size: 1.96em;\n  }\n}\n\na {\n  color: var(--primary);\n  text-decoration: none;\n}\n\na:visited {\n  color: var(--primary);\n}\n\na:hover, a:active {\n  opacity: .8;\n  text-decoration: none;\n}\n\na:focus {\n  outline: thin dotted;\n  text-decoration: none;\n}\n\na:hover, a:active {\n  outline: 0;\n}\n\n.primary-menu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n}\n\n.primary-menu li {\n  margin-left: 2em;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n@media (max-width: 768px) {\n  .primary-menu li {\n    margin-left: 1.2em;\n  }\n}\n\n.secondary-menu {\n  list-style: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.secondary-menu li {\n  margin: 0 1em;\n  font-weight: bold;\n  text-transform: uppercase;\n  position: relative;\n}\n\n.secondary-menu li:after {\n  content: \"|\";\n  position: absolute;\n  top: 0;\n  right: -1em;\n}\n\n.secondary-menu li:last-child:after {\n  content: none;\n}\n\n.meta {\n  margin-top: 1em;\n  color: #999;\n  font-size: 1em;\n}\n\n#logo {\n  width: 130px;\n  fill: var(--primary);\n}\n\n@media (max-width: 768px) {\n  #logo {\n    width: 100px;\n  }\n}\n\n.site-header {\n  padding: 0px 70px;\n  background-color: var(--secondary);\n  color: var(--primary);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100px;\n  z-index: 50;\n}\n\n@media (max-width: 768px) {\n  .site-header {\n    padding: 0 20px;\n    height: 80px;\n  }\n}\n\n.modal-active .site-header {\n  border-bottom: 1px solid var(--primary);\n}\n\n.main {\n  min-height: 100vh;\n  margin: 100px auto;\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n}\n\n@media (max-width: 768px) {\n  .main {\n    margin: 80px auto 70px;\n  }\n}\n\n.site-footer {\n  background-color: var(--secondary);\n  color: var(--primary);\n  text-align: center;\n  padding: 10px 70px;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  height: 100px;\n  z-index: 50;\n  text-transform: uppercase;\n}\n\n@media (max-width: 768px) {\n  .site-footer {\n    padding: 5px 30px;\n    height: 70px;\n    font-size: 85%;\n  }\n}\n\n.modal-active .site-footer {\n  border-top: 1px solid var(--primary);\n}\n\n.meta {\n  font-size: 0.83333em;\n}\n\n.modal-active .meta {\n  color: var(--primary);\n}\n\n.product {\n  padding: 10px 12%;\n  position: relative;\n  background-repeat: no-repeat;\n  background-size: 90%;\n  background-position: -100% 100%;\n  overflow: hidden;\n}\n\n@media (max-width: 768px) {\n  .product {\n    background-size: 160%;\n    background-position: 0% 0%;\n  }\n}\n\n.product .section-bg {\n  position: absolute;\n  top: -20%;\n  left: 0;\n  height: 100%;\n  width: auto;\n  display: block;\n  max-width: inherit;\n}\n\n@media (max-width: 768px) {\n  .product .section-bg {\n    height: 100%;\n    left: -30%;\n  }\n}\n\n.product#grifter .section-bg {\n  top: -5%;\n}\n\n@media (max-width: 768px) {\n  .product#pedlar .section-bg {\n    top: -40%;\n  }\n}\n\n.product .can {\n  margin-left: auto;\n  height: 70vh;\n  display: block;\n  z-index: 20;\n  position: relative;\n}\n\n@media (max-width: 992px) {\n  .product .can {\n    height: 40vh;\n  }\n}\n\n@media (max-width: 768px) {\n  .product .can {\n    height: auto;\n    margin: auto;\n    width: 100%;\n  }\n}\n\n#grifter {\n  background-color: #0d7395;\n  background-image: radial-gradient(farthest-side at 0% 100%, #0c3953, #0d7395);\n}\n\n#scoundrel {\n  background-color: #a4276d;\n  background-image: radial-gradient(farthest-side at 0% 100%, #54326a, #a4276d);\n}\n\n#pedlar {\n  background-color: #fec137;\n  background-image: radial-gradient(farthest-side at 0% 100%, #f68f37, #fec137);\n}\n\n.modal-active {\n  overflow: hidden;\n}\n\n.modal {\n  background-color: var(--secondary);\n  color: var(--primary);\n  height: 0;\n  text-align: center;\n  overflow: auto;\n  padding: 150px 50px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  visibility: hidden;\n  opacity: 0;\n  transition: .3s ease all;\n  z-index: 40;\n}\n\n@media (max-width: 768px) {\n  .modal {\n    padding: 70px 20px 100px;\n  }\n}\n\n.modal .modal-content {\n  font-weight: bold;\n  font-size: 1.5625em;\n  max-width: 700px;\n  margin: auto;\n}\n\n@media (min-width: 400px) and (max-width: 992px) {\n  .modal .modal-content {\n    font-size: calc( 1.5625em + 0.1275 * ( ( 100vw - 400px) / 592 ));\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1400px) {\n  .modal .modal-content {\n    font-size: calc( 1.69em + 0.27 * ( ( 100vw - 992px) / 408 ));\n  }\n}\n\n@media (min-width: 1400px) {\n  .modal .modal-content {\n    font-size: 1.96em;\n  }\n}\n\n@media (max-width: 480px) {\n  .modal .modal-content {\n    width: 100%;\n    max-width: inherit;\n  }\n}\n\n.modal-active .modal {\n  visibility: visible;\n  opacity: 1;\n  transition: .3s ease all;\n}\n","html {\n\tfont-family: sans-serif;\n\t-webkit-text-size-adjust: 100%;\n\t-ms-text-size-adjust:     100%;\n}\n\nbody {\n\tmargin: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n\tdisplay: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n\tdisplay: inline-block;\n\tvertical-align: baseline;\n}\n\naudio:not([controls]) {\n\tdisplay: none;\n\theight: 0;\n}\n\n[hidden],\ntemplate {\n\tdisplay: none;\n}\n\na {\n\tbackground-color: transparent;\n}\n\na:active,\na:hover {\n\toutline: 0;\n}\n\nabbr[title] {\n\tborder-bottom: 1px dotted;\n}\n\nb,\nstrong {\n\tfont-weight: bold;\n}\n\ndfn {\n\tfont-style: italic;\n}\n\nh1 {\n\tfont-size: 2em;\n\tmargin: 0.67em 0;\n}\n\nmark {\n\tbackground: #ff0;\n\tcolor: #000;\n}\n\nsmall {\n\tfont-size: 80%;\n}\n\nsub,\nsup {\n\tfont-size: 75%;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nimg {\n\tborder: 0;\n}\n\nsvg:not(:root) {\n\toverflow: hidden;\n}\n\nfigure {\n\tmargin: 1em 40px;\n}\n\nhr {\n\tbox-sizing: content-box;\n\theight: 0;\n}\n\npre {\n\toverflow: auto;\n}\n\ncode,\nkbd,\npre,\nsamp {\n\tfont-family: monospace, monospace;\n\tfont-size: 1em;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tcolor: inherit;\n\tfont: inherit;\n\tmargin: 0;\n}\n\nbutton {\n\toverflow: visible;\n}\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: button;\n\tcursor: pointer;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n\tcursor: default;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n\tborder: 0;\n\tpadding: 0;\n}\n\ninput {\n\tline-height: normal;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n\tbox-sizing: border-box;\n\tpadding: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\nfieldset {\n\tborder: 1px solid #c0c0c0;\n\tmargin: 0 2px;\n\tpadding: 0.35em 0.625em 0.75em;\n}\n\nlegend {\n\tborder: 0;\n\tpadding: 0;\n}\n\ntextarea {\n\toverflow: auto;\n}\n\noptgroup {\n\tfont-weight: bold;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\ntd,\nth {\n\tpadding: 0;\n}\n","html {\n\tbox-sizing: border-box;\n\tfont-size:62.5%;\n}\n\n*,\n*:before,\n*:after { /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\n\tbox-sizing: inherit;\n}\n\n.sr-only {\n\tborder: 0 !important;\n\tclip: rect(1px, 1px, 1px, 1px) !important; /* 1 */\n\t-webkit-clip-path: inset(50%) !important;\n\t\tclip-path: inset(50%) !important;  /* 2 */\n\theight: 1px !important;\n\tmargin: -1px !important;\n\toverflow: hidden !important;\n\tpadding: 0 !important;\n\tposition: absolute !important;\n\twidth: 1px !important;\n\twhite-space: nowrap !important;            /* 3 */\n}\n\n/*\n\tUse in conjunction with .sr-only to only display content when it's focused.\n\t@note Useful for skip links \n\t@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\n\t@note Based on a HTML5 Boilerplate technique, included in Bootstrap\n\t@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver\n\t\t@author Sylvain Pigeard\n\t\t@see https://github.com/twbs/bootstrap/issues/20732\n*/\n.sr-only-focusable:focus,\n.sr-only-focusable:active {\n\tclip: auto !important;\n\t-webkit-clip-path: none !important;\n\t\tclip-path: none !important;\n\theight: auto !important;\n\tmargin: auto !important;\n\toverflow: visible !important;\n\twidth: auto !important;\n\twhite-space: normal !important;\n}\n\nbody {\n\tbackground-color:$brand-primary;\n\tcolor: $brand-secondary;\n}\n\nblockquote, q {\n\tquotes: \"\" \"\";\n    margin: 20px 0 20px 50px;\n\n\t&:before,\n\t&:after {\n\t\tcontent: \"\";\n\t}\n}\n\nhr {\n\tbackground-color: lightgrey;\n\tborder: 0;\n\theight: 1px;\n\tmargin: 30px 0;\n}\n\nimg {\n\theight: auto; /* Make sure images are scaled correctly. */\n\tmax-width: 100%; /* Adhere to container width. */\n}\n\n\n\n","body,\nbutton,\ninput,\nselect,\ntextarea {\n\tcolor: $brand-secondary;\n\tfont-family: $brand-font;\n\t@include ms-respond(font-size, 2);\n\tline-height:$ms-ratio;\n}\n\n","// Generate calc() function\n// based on Mike Riethmuller's Precise control over responsive typography\n// http://madebymike.com.au/writing/precise-control-responsive-typography/\n@function ms-fluid($val1: 1em, $val2: 1em, $break1: 0, $break2: 0) {\n  $diff: ms-unitless($val2) - ms-unitless($val1);\n\n  // v1 + (v2 - v1) * ( (100vw - b1) / b2 - b1 )\n  @return calc( #{$val1} + #{ms-unitless($val2) - ms-unitless($val1)} * ( ( 100vw - #{$break1}) / #{ms-unitless($break2) - ms-unitless($break1)} ) );\n}\n\n// Main responsive mixin\n@mixin ms-respond($prop, $val, $map: $modularscale, $ms-important: false) {\n  $base: $ms-base;\n  $ratio: $ms-ratio;\n\n  $first-write: true;\n  $last-break: null;\n\n  $important: '';\n\n  @if $ms-important == true {\n    $important: ' !important';\n  }\n\n  // loop through all settings with a breakpoint type value\n  @each $v, $s in $map {\n    @if type-of($v) == number {\n      @if unit($v) != '' {\n\n        // Write out the first value without a media query.\n        @if $first-write {\n          #{$prop}: unquote(\"#{ms-function($val, $thread: $v, $settings: $map)}#{$important}\");\n\n          // Not the first write anymore, reset to false to move on.\n          $first-write: false;\n          $last-break: $v;\n        }\n\n        // Write intermediate breakpoints.\n        @else {\n          @media (min-width: $last-break) and (max-width: $v) {\n            $val1: ms-function($val, $thread: $last-break, $settings: $map);\n            $val2: ms-function($val, $thread: $v, $settings: $map);\n            #{$prop}: unquote(\"#{ms-fluid($val1,$val2,$last-break,$v)}#{$important}\");\n          }\n          $last-break: $v;\n        }\n      }\n    }\n  }\n\n  // Write the last breakpoint.\n  @if $last-break {\n    @media (min-width: $last-break) {\n      #{$prop}: unquote(\"#{ms-function($val, $thread: $last-break, $settings: $map)}#{$important}\");\n    }\n  }\n}","// Ratios\n$double-octave    : 4                 ;\n$pi               : 3.14159265359     ;\n$major-twelfth    : 3                 ;\n$major-eleventh   : 2.666666667       ;\n$major-tenth      : 2.5               ;\n$octave           : 2                 ;\n$major-seventh    : 1.875             ;\n$minor-seventh    : 1.777777778       ;\n$major-sixth      : 1.666666667       ;\n$phi              : 1.618034          ;\n$golden           : $phi              ;\n$minor-sixth      : 1.6               ;\n$fifth            : 1.5               ;\n$augmented-fourth : 1.41421           ;\n$fourth           : 1.333333333       ;\n$major-third      : 1.25              ;\n$minor-third      : 1.2               ;\n$major-second     : 1.125             ;\n$minor-second     : 1.066666667       ;\n\n// Base config\n$ms-base          : 1em    !default;\n$ms-ratio         : $minor-third     !default;\n$modularscale: (\n    400px: (\n        ratio: 1.25,\n    ),\n    992px: (\n        ratio: 1.3,\n    ),\n    1400px: (\n        ratio: 1.4,\n    ),\n) !default;","a {\n\tcolor: $brand-primary;\n    text-decoration: none;\n\n\t&:visited {\n\t\tcolor: $brand-primary;\n\t}\n\t&:hover,\n\t&:active {\n\t\topacity: .8;\n        text-decoration: none;\n\t}\n\t&:focus {\n\t\toutline: thin dotted;\n        text-decoration: none;\n\t}\n\t&:hover,\n\t&:active {\n\t\toutline: 0;\n\t}\n}\n\n.primary-menu {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\n\tdisplay: flex;\n\n\tli {\n\t\tmargin-left: 2em;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\n\t\t@include media(\"<=tablet\") {\n\t\t\tmargin-left: 1.2em;\n\t\t}\n\t}\n}\n\n\n.secondary-menu {\n\tlist-style: none;\n\tpadding: 0;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\n\tli {\n\t\tmargin: 0 1em;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tposition: relative;\n\n\t\t&:after {\n\t\t\tcontent: \"|\";\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: -1em;\n\t\t}\n\t\t&:last-child {\n\t\t\t&:after {\n\t\t\t\tcontent: none;\n\t\t\t}\n\t\t}\n\t}\n}\n\n.meta {\n\tmargin-top: 1em;\n\tcolor: $brand-darkgrey;\n\tfont-size: ms(0);\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.8\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n    'menu': 768px, \n    'sphone': 320px,\n    'phone': 480px,\n    'tablet': 768px,\n    'laptop': 992px,\n    'desktop': 1200px,\n    'large': 1400px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if log(..) {}` instead.\n  $_: log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if log(..) {}` instead.\n    $_: log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}","@function ms-function($v: 0, $base: false, $ratio: false, $thread: false, $settings: $modularscale) {\n\n  // Parse settings\n  $ms-settings: ms-settings($base,$ratio,$thread,$settings);\n  $base: nth($ms-settings, 1);\n  $ratio: nth($ms-settings, 2);\n\n  // Render target values from settings.\n  @if unit($ratio) != '' {\n    $ratio: ms-target($ratio,$base)\n  }\n\n  // Fast calc if not multi stranded\n  @if(length($base) == 1) {\n    @return ms-pow($ratio, $v) * $base;\n  }\n\n  // Create new base array\n  $ms-bases: nth($base,1);\n\n  // Normalize base values\n  @for $i from 2 through length($base) {\n    // initial base value\n    $ms-base: nth($base,$i);\n    // If the base is bigger than the main base\n    @if($ms-base > nth($base,1)) {\n      // divide the value until it aligns with main base.\n      @while($ms-base > nth($base,1)) {\n        $ms-base: $ms-base / $ratio;\n      }\n      $ms-base: $ms-base * $ratio;\n    }\n    // If the base is smaller than the main base.\n    @else if ($ms-base < nth($base,1)) {\n      // pump up the value until it aligns with main base.\n      @while $ms-base < nth($base,1) {\n        $ms-base: $ms-base * $ratio;\n      }\n    }\n    // Push into new array\n    $ms-bases: append($ms-bases,$ms-base);\n  }\n\n  // Sort array from smallest to largest.\n  $ms-bases: ms-sort($ms-bases);\n\n  // Find step to use in calculation\n  $vtep: floor($v / length($ms-bases));\n  // Find base to use in calculation\n  $ms-base: round(($v / length($ms-bases) - $vtep) * length($ms-bases)) + 1;\n\n  @return ms-pow($ratio, $vtep) * nth($ms-bases,$ms-base);\n}","#logo {\n    width: 130px;\n    fill: $brand-primary;\n\n    @include media(\"<=tablet\") {\n        width: 100px;\n    }\n}\n.site-header {\n    padding:0px 70px;\n    background-color: $brand-secondary;\n    color: $brand-primary;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100px;\n    z-index: 50;\n\n    @include media(\"<=tablet\") {\n        padding: 0 20px;\n        height: 80px;\n    }\n\n    .modal-active & {\n        border-bottom: 1px solid $brand-primary; \n    }\n}\n\n.main {\n    min-height: 100vh;\n    margin: 100px auto;\n    text-transform: uppercase;\n    letter-spacing: 0.1em;\n\n    @include media(\"<=tablet\") {\n        margin: 80px auto 70px;\n    }\n}\n\n.site-footer {\n    background-color: $brand-secondary;\n    color: $brand-primary;\n    text-align: center;\n    padding: 10px 70px;\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 100px;\n    z-index: 50;\n    text-transform: uppercase;\n\n    @include media(\"<=tablet\") {\n        padding: 5px 30px;\n        height: 70px;\n        font-size:85%;\n    }\n\n    .modal-active & {\n        border-top: 1px solid $brand-primary;\n    }\n}\n\n.meta {\n    font-size:ms(-1);\n\n    .modal-active & {\n        color: $brand-primary;\n    }\n}\n\n.product {\n    padding:10px 12%;\n    position: relative;\n    background-repeat: no-repeat;\n    background-size:90%;\n    background-position: -100% 100%;\n    overflow: hidden;\n    \n    @include media(\"<=tablet\") {\n        background-size: 160%;\n        background-position: 0% 0%;\n    }\n\n    .section-bg {\n        position: absolute;\n        top: -20%;\n        left: 0;\n        height: 100%;\n        width: auto;\n        display: block;\n        max-width: inherit;\n        @include media(\"<=tablet\") {\n            height: 100%;\n            left: -30%;\n        }\n    }\n    &#grifter {\n        .section-bg {\n            top:-5%;\n        }\n    }\n    &#pedlar {\n        .section-bg {\n            @include media(\"<=tablet\") {\n                top: -40%;\n            }\n        }\n    }\n\n    .can {\n        margin-left: auto;\n        height: 70vh;\n        display: block;\n        z-index: 20;\n        position: relative;\n        @include media(\"<=laptop\") {\n            height: 40vh;\n        }\n        @include media(\"<=tablet\") {\n            height: auto;\n            margin: auto;\n            width: 100%;\n        }\n    }\n}\n\n#grifter {\n    background-color: #0d7395;\n    background-image: radial-gradient(farthest-side at 0% 100%, #0c3953, #0d7395);\n    // background-image: url('/static/media/GRIFTER_FINAL-Flat_M.png'),radial-gradient(farthest-side at 0% 100%, #0c3953, #0d7395);\n}\n\n#scoundrel {\n    background-color: #a4276d;\n    background-image: radial-gradient(farthest-side at 0% 100%, #54326a, #a4276d);\n    // background-image: url('/static/media/PEDLAR_FINAL-Flat_M.png');\n}\n\n#pedlar {\n    background-color: #fec137;\n    background-image: radial-gradient(farthest-side at 0% 100%, #f68f37, #fec137);\n    // background-image: url('/static/media/SCOUNDREL_FINAL-Z-Flat_M.png');\n}\n\n\n//modal\n.modal-active {\n    overflow: hidden;\n}\n.modal {\n    background-color: $brand-secondary;\n    color: $brand-primary;\n    height:0;\n    text-align: center;\n    overflow: auto;\n    padding: 150px 50px;\n\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    visibility: hidden;\n    opacity: 0;\n    transition: .3s ease all;\n    z-index: 40;\n    @include media(\"<=tablet\") {\n        padding: 70px 20px 100px;\n    }\n\n    .modal-content {\n        font-weight: bold;\n        @include ms-respond(font-size,2);\n        max-width: 700px;\n        margin: auto;\n        @include media(\"<=phone\") {\n            width: 100%;\n            max-width: inherit;\n        }\n    }\n\n    .modal-active & {\n        visibility: visible;\n        opacity: 1;\n        transition: .3s ease all;\n    }\n}"]}